name: CI

on:
  push:
    branches:
      - setup-cicd-pipeline-nuget
  pull_request:
    branches:
      - setup-cicd-pipeline-nuget

env:
  BUILD_CONFIG: 'Release'
  SOLUTION: 'SD-JWT.sln'
  IS_PULL_REQUEST: ${{ github.event_name == 'pull_request' }}
  IS_MAIN_BRANCH: ${{ github.ref == 'refs/heads/main' }}
  MAJOR: '0'
  MINOR: '1'
  PATCH: '0'
    
jobs:
  build:

    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
#        
#      - name: Set Channel
#        if: $IS_MAIN_BRANCH
#        run: |
#          echo "SUFFIX=rc" >> $GITHUB_ENV
#          
#      - name: Set Channel
#        if: $IS_PULL_REQUEST
#        run: |
#          if [[ ${{ github.event.pull_request.head.ref }} =~ ^release/.*$ ]]; then
#            echo "SUFFIX=rc" >> $GITHUB_ENV
#          fi
#          echo "SUFFIX=alpha" >> $GITHUB_ENV
      
      - name: Set Version
        run: |
          if $IS_MAIN_BRANCH; then
            echo "SUFFIX=rc" >> $GITHUB_ENV
          elif $IS_PULL_REQUEST; then
            echo "SUFFIX=alpha" >> $GITHUB_ENV
          fi
          echo "APP_VERSION=$MAJOR.$MINOR.$PATCH-$SUFFIX.${{ github.run_number }}" >> $GITHUB_ENV
        
      - name: Version
        run: echo $APP_VERSION
      
      - name: Setup NuGet
        uses: NuGet/setup-nuget@v1.0.5

      - name: Restore dependencies
        run: nuget restore $SOLUTION

      - name: Setup .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: 3.1.*

      - name: Build
        run: dotnet build $SOLUTION --configuration $BUILD_CONFIG -p:Version=$APP_VERSION --no-restore

      - name: Run tests
        run: dotnet test /p:Configuration=$BUILD_CONFIG --no-restore --no-build --verbosity normal

#      - name: Publish
#        if: startsWith(github.ref, 'refs/heads/release')
#        run: nuget push **\*.nupkg -Source 'https://api.nuget.org/v3/index.json' -ApiKey ${{secrets.NUGET_API_KEY}}